/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {
        if(root==NULL||p==NULL||q==NULL) return NULL;
        
        if(root==p) return p;
        if(root==q) return q;
        
        //divide
        TreeNode* left = lowestCommonAncestor(root->left, p, q);
        TreeNode* right = lowestCommonAncestor(root->right, p, q);
        
        //conquer
        if (left&&right) return root; //find left&right, the LCA is their current root
        else if (left||right) {
            if (!left) return right; //find right, right itself is the LCA
            else return left;}
        else return NULL;
        
        
    }
};