/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {//BFS, using a queue to help
        vector<vector<int>> result;
        queue<TreeNode*> unvisited;
        
        if(root==NULL) return result;
        unvisited.push(root);
        
        while(!unvisited.empty()){
            vector<int> level;
            int size = unvisited.size();
            for(int i=0; i<size; i++){
                TreeNode *head = unvisited.front();
                unvisited.pop();
                level.push_back(head->val);
                if(head->left!=NULL) unvisited.push(head->left);
                if(head->right!=NULL) unvisited.push(head->right);
            }
            result.push_back(level);
        }
        return result;
    }
};